import logging
from datetime import datetime

from telegram import Bot
from telegram.error import TelegramError

from config.settings import TOKEN
from models.notification import Notification, NotificationType, NotificationStatus

logger = logging.getLogger(__name__)


class TelegramNotifier:
    def __init__(self):
        self.bot = Bot(token=TOKEN)

    def format_message(self, event):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
        days_left = (event.event_date - datetime.now()).days

        message = (
            f"üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏</b>\n\n"
            f"üìå –°–æ–±—ã—Ç–∏–µ: {event.event_name}\n"
            f"üìÖ –î–∞—Ç–∞: {event.event_date.strftime('%d.%m.%Y')}\n"
            f"‚è∞ –î–æ —Å–æ–±—ã—Ç–∏—è: {days_left} –¥–Ω–µ–π\n"
        )

        if event.periodicity:
            message += f"üîÑ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å: {event.periodicity} –º–µ—Å.\n"

        return message

    def send_notification(self, db, event):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram"""
        try:
            message = self.format_message(event)

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ Telegram ID –∏–∑ –ø–æ–ª—è responsible_telegram_ids
            responsible_telegram_ids = event.responsible_telegram_ids.split(
                ",") if event.responsible_telegram_ids else []

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é
            for telegram_id in responsible_telegram_ids:
                try:
                    self.bot.send_message(
                        chat_id=int(telegram_id),
                        text=message,
                        parse_mode='HTML'
                    )
                except TelegramError as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}: {e}")

            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏
            notification = Notification(
                event_id=event.event_id,
                user_id=event.creator_id,  # –∏—Å–ø–æ–ª—å–∑—É–µ–º creator_id –¥–ª—è —Å–≤—è–∑–∏
                type=NotificationType.TELEGRAM,
                scheduled_at=datetime.now()
            )

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            notification.status = NotificationStatus.SENT
            notification.sent_at = datetime.now()

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            if notification:
                notification.status = NotificationStatus.FAILED
                notification.error_message = str(e)

        finally:
            if notification:
                db.add(notification)
                db.commit()