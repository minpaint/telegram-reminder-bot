import logging

logger = logging.getLogger(__name__)


def format_event_message(event):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏.
    :param event: –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è
    :return: –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    try:
        event_date = event.event_date.strftime('%d.%m.%Y')
        message = f"–ù–∞–∑–≤–∞–Ω–∏–µ: {event.event_name}\n–î–∞—Ç–∞: {event_date}"
        if event.file_name:
            message += f"\n–§–∞–π–ª: {event.file_name}"
        if event.remind_before:
            message += f"\n–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ {event.remind_before} –¥–Ω–µ–π"
        return message
    except AttributeError as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: {e}")
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è."

def format_events_with_numbers(events):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    :param events: —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
    :return: –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    grouped_events = {}
    for event in events:
        grouped_events.setdefault(event.file_name, []).append(event)

    message = ""
    for idx, (file_name, file_events) in enumerate(grouped_events.items(), start=1):
        message += f"üìÅ {idx}. {file_name}\n"
        for sub_idx, event in enumerate(file_events, start=1):
            try:
                event_date = event.event_date.strftime('%d.%m.%Y')
                event_time = event.event_time.strftime('%H:%M') if event.event_time else "–ë–µ–∑ –≤—Ä–µ–º–µ–Ω–∏"
                message += f"üìå {idx}.{sub_idx} {event.event_name}: {event_date} {event_time}\n"
            except AttributeError as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è {event.event_name}: {e}")
                message += f"üìå {idx}.{sub_idx} {event.event_name}: ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏\n"
    return message.strip()
